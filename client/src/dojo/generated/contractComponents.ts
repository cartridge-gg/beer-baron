/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType, World } from '@dojoengine/recs';

export type ContractComponents = Awaited<ReturnType<typeof defineContractComponents>>;

export function defineContractComponents(world: World) {
    return {
        Auction: (() => {
            return defineComponent(
                world,
                {
                    game_id: RecsType.Number,
                    item_id: RecsType.Number,
                    target_price: RecsType.BigInt,
                    decay_constant_mag: RecsType.BigInt,
                    decay_constant_sign: RecsType.Boolean,
                    max_sellable: RecsType.BigInt,
                    time_scale_mag: RecsType.BigInt,
                    time_scale_sign: RecsType.Boolean,
                    start_time: RecsType.Number,
                    sold: RecsType.Number,
                },
                {
                    metadata: {
                        name: 'Auction',
                        types: ['u64', 'u64', 'u128', 'u128', 'bool', 'u128', 'u128', 'bool', 'u64', 'u64'],
                        customTypes: [],
                    },
                }
            );
        })(),
        IndulgenceAuction: (() => {
            return defineComponent(
                world,
                {
                    game_id: RecsType.Number,
                    auction_id: RecsType.Number,
                    price: RecsType.Number,
                    highest_bid_player_id: RecsType.BigInt,
                    expiry: RecsType.Number,
                    auction_id_value: RecsType.Number,
                    status: RecsType.Number,
                },
                {
                    metadata: {
                        name: 'IndulgenceAuction',
                        types: ['u64', 'u64', 'u64', 'contractaddress', 'u64', 'u64', 'u8'],
                        customTypes: [],
                    },
                }
            );
        })(),
        IndulgenceAuctionCount: (() => {
            return defineComponent(
                world,
                { game_id: RecsType.Number, count: RecsType.Number },
                {
                    metadata: {
                        name: 'IndulgenceAuctionCount',
                        types: ['u64', 'u64'],
                        customTypes: [],
                    },
                }
            );
        })(),
        TavernAuction: (() => {
            return defineComponent(
                world,
                {
                    game_id: RecsType.Number,
                    item_id: RecsType.Number,
                    target_price: RecsType.BigInt,
                    decay_constant_mag: RecsType.BigInt,
                    decay_constant_sign: RecsType.Boolean,
                    per_time_unit: RecsType.BigInt,
                    start_time: RecsType.Number,
                    sold: RecsType.Number,
                },
                {
                    metadata: {
                        name: 'TavernAuction',
                        types: ['u64', 'u64', 'u128', 'u128', 'bool', 'u128', 'u64', 'u64'],
                        customTypes: [],
                    },
                }
            );
        })(),
        ItemBalance: (() => {
            return defineComponent(
                world,
                { game_id: RecsType.Number, player_id: RecsType.BigInt, item_id: RecsType.Number, balance: RecsType.Number },
                {
                    metadata: {
                        name: 'ItemBalance',
                        types: ['u64', 'contractaddress', 'u64', 'u64'],
                        customTypes: [],
                    },
                }
            );
        })(),
        Brew: (() => {
            return defineComponent(
                world,
                {
                    game_id: RecsType.Number,
                    player_id: RecsType.BigInt,
                    batch_id: RecsType.Number,
                    batch_key: RecsType.Number,
                    owner: RecsType.BigInt,
                    beer_id: RecsType.Number,
                    time_built: RecsType.Number,
                    status: RecsType.Number,
                },
                {
                    metadata: {
                        name: 'Brew',
                        types: ['u64', 'contractaddress', 'u64', 'u64', 'contractaddress', 'u64', 'u64', 'u64'],
                        customTypes: [],
                    },
                }
            );
        })(),
        BrewBatchTrack: (() => {
            return defineComponent(
                world,
                { game_id: RecsType.Number, owner: RecsType.BigInt, count: RecsType.Number },
                {
                    metadata: {
                        name: 'BrewBatchTrack',
                        types: ['u64', 'contractaddress', 'u64'],
                        customTypes: [],
                    },
                }
            );
        })(),
        Game: (() => {
            return defineComponent(
                world,
                {
                    game_id: RecsType.Number,
                    start_time: RecsType.Number,
                    status: RecsType.Number,
                    number_players: RecsType.Number,
                    max_players: RecsType.Number,
                    game_length: RecsType.Number,
                    password: RecsType.BigInt,
                    entry_fee: RecsType.Number,
                    seed: RecsType.Number,
                },
                {
                    metadata: {
                        name: 'Game',
                        types: ['u64', 'u64', 'u64', 'u32', 'u32', 'u32', 'felt252', 'u32', 'u64'],
                        customTypes: [],
                    },
                }
            );
        })(),
        GameTracker: (() => {
            return defineComponent(
                world,
                { entity_id: RecsType.Number, count: RecsType.Number },
                {
                    metadata: {
                        name: 'GameTracker',
                        types: ['u64', 'u64'],
                        customTypes: [],
                    },
                }
            );
        })(),
        Joined: (() => {
            return defineComponent(
                world,
                { game_id: RecsType.Number, address: RecsType.BigInt, joined: RecsType.Boolean },
                {
                    metadata: {
                        name: 'Joined',
                        types: ['u64', 'felt252', 'bool'],
                        customTypes: [],
                    },
                }
            );
        })(),
        Ownership: (() => {
            return defineComponent(
                world,
                { entity_id: RecsType.Number, owner: RecsType.BigInt },
                {
                    metadata: {
                        name: 'Ownership',
                        types: ['u64', 'felt252'],
                        customTypes: [],
                    },
                }
            );
        })(),
        FarmArea: (() => {
            return defineComponent(
                world,
                {
                    game_id: RecsType.Number,
                    player_id: RecsType.BigInt,
                    area_id: RecsType.Number,
                    area_type: RecsType.Number,
                    time_built: RecsType.Number,
                },
                {
                    metadata: {
                        name: 'FarmArea',
                        types: ['u64', 'contractaddress', 'u64', 'u64', 'u64'],
                        customTypes: [],
                    },
                }
            );
        })(),
        Player: (() => {
            return defineComponent(
                world,
                { game_id: RecsType.Number, player_id: RecsType.BigInt, name: RecsType.BigInt },
                {
                    metadata: {
                        name: 'Player',
                        types: ['u64', 'contractaddress', 'felt252'],
                        customTypes: [],
                    },
                }
            );
        })(),
        Trade: (() => {
            return defineComponent(
                world,
                {
                    entity_id: RecsType.Number,
                    game_id: RecsType.Number,
                    item_id: RecsType.Number,
                    quantity: RecsType.Number,
                    price: RecsType.Number,
                    status: RecsType.Number,
                    player_id: RecsType.BigInt,
                    game_id_value: RecsType.Number,
                },
                {
                    metadata: {
                        name: 'Trade',
                        types: ['u64', 'u64', 'u64', 'u64', 'u64', 'u8', 'contractaddress', 'u64'],
                        customTypes: [],
                    },
                }
            );
        })(),
        TradeTrack: (() => {
            return defineComponent(
                world,
                { game_id: RecsType.Number, count: RecsType.Number },
                {
                    metadata: {
                        name: 'TradeTrack',
                        types: ['u64', 'u64'],
                        customTypes: [],
                    },
                }
            );
        })(),
    };
}
