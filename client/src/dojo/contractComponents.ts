/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType, World } from "@latticexyz/recs";

export function defineContractComponents(world: World) {
  return {
    Auction: (() => {
      const name = "Auction";
      return defineComponent(
        world,
        {
          target_price: RecsType.BigInt,
          decay_constant_mag: RecsType.BigInt,
          decay_constant_sign: RecsType.Boolean,
          max_sellable: RecsType.BigInt,
          time_scale_mag: RecsType.BigInt,
          time_scale_sign: RecsType.Boolean,
          start_time: RecsType.Number,
          sold: RecsType.BigInt,
        },
        {
          metadata: {
            name: name,
            types: ["u128","u128","bool","u128","u128","bool","u64","u128"],
          },
        }
      );
    })(),
    TavernAuction: (() => {
      const name = "TavernAuction";
      return defineComponent(
        world,
        {
          target_price: RecsType.BigInt,
          decay_constant_mag: RecsType.BigInt,
          decay_constant_sign: RecsType.Boolean,
          per_time_unit: RecsType.BigInt,
          start_time: RecsType.Number,
          sold: RecsType.BigInt,
        },
        {
          metadata: {
            name: name,
            types: ["u128","u128","bool","u128","u64","u128"],
          },
        }
      );
    })(),
    IndulgenceAuction: (() => {
      const name = "IndulgenceAuction";
      return defineComponent(
        world,
        {
          price: RecsType.BigInt,
          highest_bid_player_id: RecsType.BigInt,
          expiry: RecsType.Number,
          auction_id_value: RecsType.Number,
          status: RecsType.Number,
        },
        {
          metadata: {
            name: name,
            types: ["u128","ContractAddress","u64","u64","u8"],
          },
        }
      );
    })(),
    IndulgenceAuctionCount: (() => {
      const name = "IndulgenceAuctionCount";
      return defineComponent(
        world,
        {
          count: RecsType.Number,
        },
        {
          metadata: {
            name: name,
            types: ["u64"],
          },
        }
      );
    })(),
    ItemBalance: (() => {
      const name = "ItemBalance";
      return defineComponent(
        world,
        {
          balance: RecsType.BigInt,
        },
        {
          metadata: {
            name: name,
            types: ["u128"],
          },
        }
      );
    })(),
    Game: (() => {
      const name = "Game";
      return defineComponent(
        world,
        {
          start_time: RecsType.Number,
          status: RecsType.Number,
          number_players: RecsType.Number,
          max_players: RecsType.Number,
          game_length: RecsType.Number,
          password: RecsType.BigInt,
          entry_fee: RecsType.Number,
          seed: RecsType.Number,
        },
        {
          metadata: {
            name: name,
            types: ["u64","u64","u32","u32","u32","felt252","u32","u64"],
          },
        }
      );
    })(),
    Joined: (() => {
      const name = "Joined";
      return defineComponent(
        world,
        {
          joined: RecsType.Boolean,
        },
        {
          metadata: {
            name: name,
            types: ["bool"],
          },
        }
      );
    })(),
    GameTracker: (() => {
      const name = "GameTracker";
      return defineComponent(
        world,
        {
          count: RecsType.Number,
        },
        {
          metadata: {
            name: name,
            types: ["u64"],
          },
        }
      );
    })(),
    Ownership: (() => {
      const name = "Ownership";
      return defineComponent(
        world,
        {
          owner: RecsType.BigInt,
        },
        {
          metadata: {
            name: name,
            types: ["felt252"],
          },
        }
      );
    })(),
    Player: (() => {
      const name = "Player";
      return defineComponent(
        world,
        {
          name: RecsType.BigInt,
        },
        {
          metadata: {
            name: name,
            types: ["felt252"],
          },
        }
      );
    })(),
    FarmArea: (() => {
      const name = "FarmArea";
      return defineComponent(
        world,
        {
          area_type: RecsType.Number,
          time_built: RecsType.Number,
        },
        {
          metadata: {
            name: name,
            types: ["u64","u64"],
          },
        }
      );
    })(),
    Brew: (() => {
      const name = "Brew";
      return defineComponent(
        world,
        {
          batch_key: RecsType.Number,
          owner: RecsType.BigInt,
          beer_id: RecsType.Number,
          time_built: RecsType.Number,
          status: RecsType.Number,
        },
        {
          metadata: {
            name: name,
            types: ["u64","ContractAddress","u64","u64","u64"],
          },
        }
      );
    })(),
    BrewBatchTrack: (() => {
      const name = "BrewBatchTrack";
      return defineComponent(
        world,
        {
          owner: RecsType.BigInt,
          count: RecsType.Number,
        },
        {
          metadata: {
            name: name,
            types: ["ContractAddress","u64"],
          },
        }
      );
    })(),
    Trade: (() => {
      const name = "Trade";
      return defineComponent(
        world,
        {
          item_id: RecsType.BigInt,
          quantity: RecsType.BigInt,
          price: RecsType.BigInt,
          status: RecsType.Number,
          player_id: RecsType.BigInt,
          game_id_value: RecsType.Number,
        },
        {
          metadata: {
            name: name,
            types: ["u128","u128","u128","u8","ContractAddress","u64"],
          },
        }
      );
    })(),
    TradeTrack: (() => {
      const name = "TradeTrack";
      return defineComponent(
        world,
        {
          count: RecsType.Number,
        },
        {
          metadata: {
            name: name,
            types: ["u64"],
          },
        }
      );
    })(),
  };
}
